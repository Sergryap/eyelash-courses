# Generated by Django 4.1.7 on 2023-03-17 15:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Фамилия')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='RU', verbose_name='Телефон')),
                ('telegram_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Telegram Id')),
                ('vk_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Vk Id')),
                ('vk_profile', models.URLField(blank=True, null=True, verbose_name='Профиль ВК')),
                ('registered_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время регистрации')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Заметки о клиенте')),
                ('bot_state', models.CharField(default='START', help_text='Стейт-машина бота', max_length=50, verbose_name='Текущее состояние бота')),
            ],
            options={
                'verbose_name': 'клиента',
                'verbose_name_plural': 'клиенты',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название курса')),
                ('scheduled_at', models.DateTimeField(verbose_name='Дата и время курса')),
                ('duration', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=30)], verbose_name='Дней')),
                ('price', models.PositiveIntegerField(verbose_name='Стоимость, RUB')),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Описание курса')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Сокращенное описание')),
                ('vk_album_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Идентификатор альбома ВК для курса')),
                ('published_in_bot', models.BooleanField(default=True, verbose_name='В боте')),
            ],
            options={
                'verbose_name': 'курс',
                'verbose_name_plural': 'курсы',
                'ordering': ['scheduled_at'],
                'get_latest_by': 'scheduled_at',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Описание лектора')),
            ],
            options={
                'verbose_name': 'лектора',
                'verbose_name_plural': 'лекторы',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Название программы')),
                ('description', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Описание программы')),
                ('short_description', models.TextField(blank=True, null=True, verbose_name='Сокращенное описание')),
                ('image', models.ImageField(upload_to='program', verbose_name='Иллюстрация программы')),
            ],
            options={
                'verbose_name': 'программу',
                'verbose_name_plural': 'программы',
            },
        ),
        migrations.CreateModel(
            name='CourseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='courses')),
                ('image_vk_id', models.CharField(blank=True, max_length=50, null=True)),
                ('upload_vk', models.BooleanField(default=True, verbose_name='Загрузить в ВК')),
                ('position', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='courses.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото к курсу',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='CourseClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Отзыв клиента')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='courses.client', verbose_name='клиент')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='courses.course', verbose_name='курс')),
            ],
            options={
                'verbose_name': 'Курс - клиент',
                'verbose_name_plural': 'Курсы по клиентам',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='clients',
            field=models.ManyToManyField(related_name='courses', through='courses.CourseClient', to='courses.client', verbose_name='Клиенты'),
        ),
        migrations.AddField(
            model_name='course',
            name='lecture',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.lecturer', verbose_name='лектор'),
        ),
        migrations.AddField(
            model_name='course',
            name='program',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='courses.program', verbose_name='программа'),
        ),
        migrations.AddConstraint(
            model_name='courseclient',
            constraint=models.UniqueConstraint(fields=('client', 'course'), name='unique_client_course'),
        ),
    ]
